vboxuser@Ubuntu22:~/p5$ ros2 run plansys2_terminal plansys2_terminal

[INFO] [1676714605.006874412] [terminal]: No problem file specified.

ROS2 Planning System console. Type "quit" to finish

> get domain

domain: 

(define (domain emergency-service-extended-durative)

(:requirements :durative-actions :fluents :strips :typing )



(:types

 



        location locatable content_type - object

        person box robot carrier content - locatable

)



(:constants



        

        agent - robot

        depot - location

        food medicine tool - content_type

)



(:predicates



        

        (at ?o - locatable ?l - location) 

        (available ?c - content) 

        (carries ?cr - carrier ?b - box) 

        (contains ?b - box ?c - content) 

        (empty ?b - box) 

        (instance_of ?c - content ?t - content_type) 

        (is_emptying_at ?r - robot ?b - box ?l - location) 

        (loadable ?b - box) 

        (needs ?p - person ?t - content_type) 

        (not_busy ?r - robot) 

        (pulls ?r - robot ?cr - carrier) 

        (safe ?p - person) 

)



(:functions



        

        (max_load ?cr - carrier) 

        (count_load ?cr - carrier) 

        (count_needs ?p - person) 

        (count_needed ?t - content_type) 

        (count_needed_at ?t - content_type ?l - location) 

)



(:durative-action fill

        :parameters (?r - robot ?b - box ?c - content ?t - content_type ?l - location)

        :duration (= ?duration 3)

        :condition (and 

            (over all (at ?r ?l))

            (over all (at ?b ?l))

            (over all (at ?c ?l))

            (at start (not_busy ?r))

            (at start (empty ?b)) 

            (at start (available ?c))

            (over all (instance_of ?c ?t))

            (at start (> (count_needed ?t) 0))

        ) 

        :effect (and 

            (at start (not (not_busy ?r)))

            (at end (not_busy ?r))

            (at end (contains ?b ?c))

            (at end (not (empty ?b)))

            (at start (not (available ?c)))

        )

    )

(:durative-action start_empty

        :parameters (?r - robot ?cr - carrier ?b - box ?c - content ?t - content_type ?p - person ?l - location)

        :duration (= ?duration 3)

        :condition (and 

            (over all (at ?r ?l))

            (over all (at ?p ?l))

            (over all (pulls ?r ?cr))

            (over all (carries ?cr ?b))

            (over all (contains ?b ?c))

            (over all (instance_of ?c ?t))

            (at start (needs ?p ?t))

            (at start (not_busy ?r))

            (at start (> (count_needed_at ?t ?l) 0))

        )

        :effect (and 

            (at start (not (not_busy ?r)))

            

            (at start (is_emptying_at ?r ?b ?l))

            

            (at start (not (needs ?p ?t)))

            (at end (decrease (count_needs ?p) 1))

            (at end (decrease (count_needed ?t) 1))

            (at end (decrease (count_needed_at ?t ?l) 1))

        )   

    )

(:durative-action continue_empty

        :parameters (?r - robot ?cr - carrier ?b - box ?c - content ?t - content_type ?p - person ?l - location)

        :duration (= ?duration 3)

        :condition (and 

            (over all (at ?r ?l))

            (over all (at ?p ?l))

            (over all (pulls ?r ?cr))

            (over all (carries ?cr ?b))

            (over all (contains ?b ?c))

            (over all (instance_of ?c ?t))

            (at start (needs ?p ?t))

            (at start (is_emptying_at ?r ?b ?l)) 

            (at start (> (count_needed_at ?t ?l) 0))

        )

        :effect (and 

            

            

            (at start (not (needs ?p ?t)))

            (at end (decrease (count_needs ?p) 1))

            (at end (decrease (count_needed ?t) 1))

            (at end (decrease (count_needed_at ?t ?l) 1))

        )   

    )

(:durative-action check_empty

        :parameters (?r - robot ?cr - carrier ?b - box ?c - content ?t - content_type ?l - location)

        :duration (= ?duration 1)

        :condition (and 

            (over all (at ?r ?l))

            (over all (pulls ?r ?cr))

            (over all (carries ?cr ?b))

            (over all (contains ?b ?c))

            (over all (instance_of ?c ?t))

            (at start (is_emptying_at ?r ?b ?l)) 

            (at start (= (count_needed_at ?t ?l) 0))

        )

        :effect (and 

            (at end (not_busy ?r))

            (at start (not (is_emptying_at ?r ?b ?l)))

            (at end (not (contains ?b ?c)))

            (at end (empty ?b))

            (at end (at ?c ?l))

        )

    )

(:durative-action pickup

        :parameters (?r - robot ?cr - carrier ?b - box ?l - location)

        :duration (= ?duration 2)

        :condition (and 

            (over all (at ?r ?l))

            (over all (at ?b ?l))

            (over all (pulls ?r ?cr))

            (at start (not_busy ?r))

            (at start (loadable ?b))

            (at start (< (count_load ?cr) (max_load ?cr)))

        )

        :effect (and 

            (at start (not (not_busy ?r)))

            (at end (not_busy ?r))

            (at start (not (loadable ?b)))

            (at end (carries ?cr ?b))

            (at end (increase (count_load ?cr) 1))

        )

    )

(:durative-action move

        :parameters (?r - robot ?from - location ?to - location)

        :duration (= ?duration 5)

        :condition (and 

            (at start (at ?r ?from))

            (at start (not_busy ?r))

        )

        :effect (and 

            (at start (not (not_busy ?r)))

            (at end (not_busy ?r))

            (at start (not (at ?r ?from)))

            (at end (at ?r ?to))

        )

    )

(:durative-action deliver

        :parameters (?r - robot ?cr - carrier ?b - box ?p - person ?l - location)

        :duration (= ?duration 2)

        :condition (and 

            (over all (at ?r ?l))

            (over all (at ?p ?l))

            (at start (not_busy ?r))

            (over all (pulls ?r ?cr))

            (at start (carries ?cr ?b))

        )

        :effect (and 

            (at start (not (not_busy ?r)))

            (at end (not_busy ?r))

            (at end (at ?b ?l))

            (at end (loadable ?b))

            (at end (not (carries ?cr ?b)))

            (at end (decrease (count_load ?cr) 1))

        )

    )

(:durative-action check_safe

        :parameters (?r - robot ?p - person)

        :duration (= ?duration 1)

        :condition (and 

            (at start (not_busy ?r))

            (at start (= (count_needs ?p) 0))

        )

        :effect (and 

            (at start (not (not_busy ?r)))

            (at end (not_busy ?r))

            (at end (safe ?p))

        )

    )

)



> get problem instances 

Instances: 0

> set instance agent robot

> set instance depot location

> set instance food content_type

> set instance medicine content_type

> set instance tool content_type

> set instance cr1 carrier

> set instance b1 box

> set instance l1 location

> set instance l2 location

> set instance c1 content

> set instance c3 content

> set instance c4 content

> set instance gizem person

> set instance daria person

> set predicate (at gizem l1)

> set predicate (at daria l2)

> set predicate (needs gizem medicine)

> set predicate (needs daria medicine)

> set predicate (needs daria food)

> set predicate (at b1 depot)

> set predicate (empty b1)

> set predicate (loadable b1)

> set predicate (at c1 depot)

> set predicate (at c3 depot)

> set predicate (at c4 depot)

> set predicate (available c1)

> set predicate (available c3)

> set predicate (available c4)

> set predicate (instance_of c1 food)

> set predicate (instance_of c3 medicine)

> set predicate (instance_of c4 medicine)

> set predicate (at agent depot)

> set predicate (pulls agent cr1)

> set predicate (not_busy agent)

> set predicate (at cr1 depot)

> get problem predicates 

Predicates: 21

(at gizem l1)

(at daria l2)

(needs gizem medicine)

(needs daria medicine)

(needs daria food)

(at b1 depot)

(empty b1)

(loadable b1)

(at c1 depot)

(at c3 depot)

(at c4 depot)

(available c1)

(available c3)

(available c4)

(instance_of c1 food)

(instance_of c3 medicine)

(instance_of c4 medicine)

(at agent depot)

(pulls agent cr1)

(not_busy agent)

(at cr1 depot)

> set function (= (count_needs gizem) 1)

done

> set function (= (count_needs daria) 2)

done

> set function (= (count_needed medicine) 2)

done

> set function (= (count_needed food) 1)

done

> set function (= (count_needed_at medicine l1) 1)

done

> set function (= (count_needed_at medicine l2) 1)

done

> set function (= (count_needed_at food l2) 1)

done

> set function (= (count_load cr1) 0)

done

> set function (= (max_load cr1) 4)

done

> set goal (and (safe gizem) (safe daria) (at agent depot))

> get problem goal 

Goal: (and (safe gizem)(safe daria)(at agent depot))

> run plan-file problem.plan

The plan read from "problem.plan" is 

0:	(fill agent b1 c3 medicine depot)	[3]

3.001:	(pickup agent cr1 b1 depot)	[2]

5.002:	(move agent depot l1)	[5]

10.003:	(start_empty agent cr1 b1 c3 medicine gizem l1)	[3]

13.004:	(check_empty agent cr1 b1 c3 medicine l1)	[1]

14.005:	(check_safe agent gizem)	[1]

15.006:	(move agent l1 depot)	[5]

20.007:	(fill agent b1 c1 food depot)	[3]

23.008:	(move agent depot l2)	[5]

28.009:	(start_empty agent cr1 b1 c1 food daria l2)	[3]

31.01:	(check_empty agent cr1 b1 c1 food l2)	[1]

32.011:	(move agent l2 depot)	[5]

37.012:	(fill agent b1 c4 medicine depot)	[3]

40.013:	(move agent depot l2)	[5]

45.014:	(start_empty agent cr1 b1 c4 medicine daria l2)	[3]

48.015:	(check_empty agent cr1 b1 c4 medicine l2)	[1]

49.016:	(check_safe agent daria)	[1]

50.017:	(move agent l2 depot)	[5]

[plansys2_node-1] [INFO] [1676714964.693134183] [executor]: Action fill timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.708291096] [executor]: Action pickup timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.810416992] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.825598639] [executor]: Action start_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.930022419] [executor]: Action check_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.944710335] [executor]: Action check_safe timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714964.954874647] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.025117377] [executor]: Action fill timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.178902899] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.357431285] [executor]: Action start_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.487456098] [executor]: Action check_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.634772415] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.684196155] [executor]: Action fill timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.861730704] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714965.878478776] [executor]: Action start_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714966.034812311] [executor]: Action check_empty timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714966.068358053] [executor]: Action check_safe timeout percentage -1.000000

[plansys2_node-1] [INFO] [1676714966.202253781] [executor]: Action move timeout percentage -1.000000

[plansys2_node-1] [WARN] [1676714966.391975069] [rcl.logging_rosout]: Publisher already registered for provided node name. If this is due to multiple nodes with the same name then all logs for that logger name will go out over the existing publisher. As soon as any node with that name is destructed it will unregister the publisher, preventing any further logs for that name from being published on the rosout topic.

[plansys2_node-1] [WARN] [1676714966.612391293] [rcl.logging_rosout]: Publisher already registered for provided node name. If this is due to multiple nodes with the same name then all logs for that logger name will go out over the existing publisher. As soon as any node with that name is destructed it will unregister the publisher, preventing any further logs for that name from being published on the rosout topic.

Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = 100% 

Pick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) complePick up the box and load it to carrier ... args = (agent, cr1, b1, depot) completion = 100% 

Moving to another location ... args = (agent, depot, l1) completion = 100% 

[(start_empty agent cr1 b1 c3 medicine gizem l1) 70%][start_empty_action_node-3]Requesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizem, l1) completion = 100% 

Requesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c3, medicine, l1) completion = 100% 

Requesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, gizem) completion = 100% 

Moving to another location ... args = (agent, l1, depot) completion = 100% 

Requesting for filling ... args = (agent, b1, c3, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c1, food, depot) completion = 100% 

[plansys2_node-1] [WARN] [1676714995.474487126] [LifecyclePublisher]: Trying to publish message on the topic '/actions_hub', but the publisher is not activated

Moving to another location ... args = (agent, depot, l2) completion = 100% 

Requesting for starting to empty ... args = (agent, cr1, b1, c3, medicine, gizemRequesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2) completion = 100% 

Requesting for checking status of the box ... args = (agent, cr1, b1, c3, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, l2) completion = 100% 

[plansys2_node-1] [WARN] [1676715005.806459878] [LifecyclePublisher]: Trying to publish message on the topic '/actions_hub', but the publisher is not activated

Moving to another location ... args = (agent, l2, depot) completion = 100% 

Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = Requesting for filling ... args = (agent, b1, c4, medicine, depot) completion = 100% 

Moving to another location ... args = (agent, depot, l2) completion = 100% 

[(start_empty agent cr1 b1 c4 medicine daria l2) 70%][start_empty_action_node-3]Requesting for starting to empty ... args = (agent, cr1, b1, c1, food, daria, l2Requesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, dariaRequesting for starting to empty ... args = (agent, cr1, b1, c4, medicine, daria, l2) completion = 100% 

Requesting for checking status of the box ... args = (agent, cr1, b1, c1, food, Requesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, mediciRequesting for checking status of the box ... args = (agent, cr1, b1, c4, medicine, l2) completion = 100% 

Requesting for checking status of the person ... args = (agent, gizem) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completioRequesting for checking status of the person ... args = (agent, daria) completion = 100% 

Moving to another location ... args = (agent, l2, depot) completion = 100% 

[(move agent l2 depot) 90%][plansys2_node-1] [INFO] [1676715032.498934697] [executor]: Plan Succeeded

[INFO] [1676715034.689266471] [executor_client]: Plan Succeeded



Successful finished 

> 



